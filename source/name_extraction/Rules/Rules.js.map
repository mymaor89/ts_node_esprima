{"version":3,"file":"Rules.js","sourceRoot":"","sources":["Rules.ts"],"names":[],"mappings":";;AAGA,MAAsB,KAAK;IAEvB,YAAgC,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;QAEhC,gBAAW,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,aAAa,CAAA,CAAC,wBAAwB;IAFzC,CAAC;IAIpC,QAAQ;QACd,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,WAAW,CAAA;IAC9C,CAAC;IAID,OAAO;QACH,IAAI,IAAI,CAAC,QAAQ,EAAE;YACf,OAAO,IAAI,CAAC,MAAM,EAAE,CAAA;;YAEpB,OAAO,KAAK,CAAA;IAEpB,CAAC;CACJ;AAnBD,sBAmBC","sourcesContent":["import { Identifier } from \"../Identifier\";\nimport { Node } from \"estree\";\n\nexport abstract class Rules {\n\n    constructor( protected readonly node: Node) {}\n\n    protected declaration = `${this.constructor.name}Declaration` //Template literal (ES6)\n\n    protected conforms(): boolean {\n        return this.node.type === this.declaration\n    }\n\n    abstract handle(): Identifier | Identifier[] \n\n    extract(): Identifier | Identifier[]| boolean {\n        if (this.conforms())\n            return this.handle()\n        else\n            return false\n\n    }\n}\n"]}